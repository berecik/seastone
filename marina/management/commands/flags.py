#!/usr/bin/python
# -*- coding: utf-8 -*-
from __future__ import absolute_import

__author__ = 'beret'

import os

from marina.models import Flag
from django.core.management.base import BaseCommand, CommandError

BASE_DIR = os.path.dirname(os.path.dirname(__file__))

_dir = "static/flags"

_COUNTRIES = {
    'AD': u'Andorra',
    'AE': u'United Arab Emirates',
    'AF': u'Afghanistan',
    'AG': u'Antigua and Barbuda',
    'AI': u'Anguilla',
    'AL': u'Albania',
    'AM': u'Armenia',
    'AO': u'Angola',
    'AQ': u'Antarctica',
    'AR': u'Argentina',
    'AS': u'American Samoa',
    'AT': u'Austria',
    'AU': u'Australia',
    'AW': u'Aruba',
    'AX': u'Aland Islands',
    'AZ': u'Azerbaijan',
    'BA': u'Bosnia and Herzegovina',
    'BB': u'Barbados',
    'BD': u'Bangladesh',
    'BE': u'Belgium',
    'BF': u'Burkina Faso',
    'BG': u'Bulgaria',
    'BH': u'Bahrain',
    'BI': u'Burundi',
    'BJ': u'Benin',
    'BL': u'Saint Barthélemy',
    'BM': u'Bermuda',
    'BN': u'Brunei',
    'BO': u'Bolivia',
    'BQ': u'Caribbean Netherlands',
    'BR': u'Brazil',
    'BS': u'The Bahamas',
    'BT': u'Bhutan',
    'BV': u'Bouvet Island',
    'BW': u'Botswana',
    'BY': u'Belarus',
    'BZ': u'Belize',
    'CA': u'Canada',
    'CC': u'Cocos (Keeling) Islands',
    'CD': u'Democratic Republic of the Congo',
    'CF': u'Central African Republic',
    'CG': u'Republic of the Congo',
    'CH': u'Switzerland',
    'CI': u'Cote d\'Ivoire',
    'CK': u'Cook Islands',
    'CL': u'Chile',
    'CM': u'Cameroon',
    'CN': u'China',
    'CO': u'Colombia',
    'CR': u'Costa Rica',
    'CU': u'Cuba',
    'CV': u'Cabo Verde',
    'CW': u'Curaçao',
    'CX': u'Christmas Island',
    'CY': u'Cyprus',
    'CZ': u'Czech Republic',
    'DE': u'Germany',
    'DJ': u'Djibouti',
    'DK': u'Denmark',
    'DM': u'Dominica',
    'DO': u'Dominican Republic',
    'DZ': u'Algeria',
    'EC': u'Ecuador',
    'EE': u'Estonia',
    'EG': u'Egypt',
    'EH': u'Western Sahara',
    'ER': u'Eritrea',
    'ES': u'Spain',
    'ET': u'Ethiopia',
    'FI': u'Finland',
    'FJ': u'Fiji',
    'FK': u'Falkland Islands',
    'FM': u'Federated States of Micronesia',
    'FO': u'Faroe Islands',
    'FR': u'France',
    'GA': u'Gabon',
    'GB': u'United Kingdom',
    'GD': u'Grenada',
    'GE': u'Georgia (country)',
    'GF': u'French Guiana',
    'GG': u'Guernsey',
    'GH': u'Ghana',
    'GI': u'Gibraltar',
    'GL': u'Greenland',
    'GM': u'The Gambia',
    'GN': u'Guinea',
    'GP': u'Guadeloupe',
    'GQ': u'Equatorial Guinea',
    'GR': u'Greece',
    'GS': u'South Georgia and the South Sandwich Islands',
    'GT': u'Guatemala',
    'GU': u'Guam',
    'GW': u'Guinea-Bissau',
    'GY': u'Guyana',
    'HK': u'Hong Kong',
    'HM': u'Heard Island and McDonald Islands',
    'HN': u'Honduras',
    'HR': u'Croatia',
    'HT': u'Haiti',
    'HU': u'Hungary',
    'ID': u'Indonesia',
    'IE': u'Republic of Ireland',
    'IL': u'Israel',
    'IM': u'Isle of Man',
    'IN': u'India',
    'IO': u'British Indian Ocean Territory',
    'IQ': u'Iraq',
    'IR': u'Iran',
    'IS': u'Iceland',
    'IT': u'Italy',
    'JE': u'Jersey',
    'JM': u'Jamaica',
    'JO': u'Jordan',
    'JP': u'Japan',
    'KE': u'Kenya',
    'KG': u'Kyrgyzstan',
    'KH': u'Cambodia',
    'KI': u'Kiribati',
    'KM': u'Comoros',
    'KN': u'Saint Kitts and Nevis',
    'KP': u'North Korea',
    'KR': u'South Korea',
    'KW': u'Kuwait',
    'KY': u'Cayman Islands',
    'KZ': u'Kazakhstan',
    'LA': u'Laos',
    'LB': u'Lebanon',
    'LC': u'Saint Lucia',
    'LI': u'Liechtenstein',
    'LK': u'Sri Lanka',
    'LR': u'Liberia',
    'LS': u'Lesotho',
    'LT': u'Lithuania',
    'LU': u'Luxembourg',
    'LV': u'Latvia',
    'LY': u'Libya',
    'MA': u'Morocco',
    'MC': u'Monaco',
    'MD': u'Moldova',
    'ME': u'Montenegro',
    'MF': u'Collectivity of Saint Martin',
    'MG': u'Madagascar',
    'MH': u'Marshall Islands',
    'MK': u'Republic of Macedonia',
    'ML': u'Mali',
    'MM': u'Myanmar',
    'MN': u'Mongolia',
    'MO': u'Macau',
    'MP': u'Northern Mariana Islands',
    'MQ': u'Martinique',
    'MR': u'Mauritania',
    'MS': u'Montserrat',
    'MT': u'Malta',
    'MU': u'Mauritius',
    'MV': u'Maldives',
    'MW': u'Malawi',
    'MX': u'Mexico',
    'MY': u'Malaysia',
    'MZ': u'Mozambique',
    'NA': u'Namibia',
    'NC': u'New Caledonia',
    'NE': u'Niger',
    'NF': u'Norfolk Island',
    'NG': u'Nigeria',
    'NI': u'Nicaragua',
    'NL': u'Netherlands',
    'NO': u'Norway',
    'NP': u'Nepal',
    'NR': u'Nauru',
    'NU': u'Niue',
    'NZ': u'New Zealand',
    'OM': u'Oman',
    'PA': u'Panama',
    'PE': u'Peru',
    'PF': u'French Polynesia',
    'PG': u'Papua New Guinea',
    'PH': u'Philippines',
    'PK': u'Pakistan',
    'PL': u'Poland',
    'PM': u'Saint Pierre and Miquelon',
    'PN': u'Pitcairn Islands',
    'PR': u'Puerto Rico',
    'PS': u'State of Palestine',
    'PT': u'Portugal',
    'PW': u'Palau',
    'PY': u'Paraguay',
    'QA': u'Qatar',
    'RE': u'Reunion',
    'RO': u'Romania',
    'RS': u'Serbia',
    'RU': u'Russia',
    'RW': u'Rwanda',
    'SA': u'Saudi Arabia',
    'SB': u'Solomon Islands',
    'SC': u'Seychelles',
    'SD': u'Sudan',
    'SE': u'Sweden',
    'SG': u'Singapore',
    'SH': u'Saint Helena, Ascension and Tristan da Cunha',
    'SI': u'Slovenia',
    'SJ': u'Svalbard and Jan Mayen',
    'SK': u'Slovakia',
    'SL': u'Sierra Leone',
    'SM': u'San Marino',
    'SN': u'Senegal',
    'SO': u'Somalia',
    'SR': u'Suriname',
    'SS': u'South Sudan',
    'ST': u'São Tomé and Príncipe',
    'SV': u'El Salvador',
    'SX': u'Sint Maarten',
    'SY': u'Syria',
    'SZ': u'Swaziland',
    'TC': u'Turks and Caicos Islands',
    'TD': u'Chad',
    'TF': u'French Southern and Antarctic Lands',
    'TG': u'Togo',
    'TH': u'Thailand',
    'TJ': u'Tajikistan',
    'TK': u'Tokelau',
    'TL': u'East Timor',
    'TM': u'Turkmenistan',
    'TN': u'Tunisia',
    'TO': u'Tonga',
    'TR': u'Turkey',
    'TT': u'Trinidad and Tobago',
    'TV': u'Tuvalu',
    'TW': u'Taiwan',
    'TZ': u'Tanzania',
    'UA': u'Ukraine',
    'UG': u'Uganda',
    'UM': u'United States Minor Outlying Islands',
    'US': u'United States',
    'UY': u'Uruguay',
    'UZ': u'Uzbekistan',
    'VA': u'Vatican City',
    'VC': u'Saint Vincent and the Grenadines',
    'VE': u'Venezuela',
    'VG': u'British Virgin Islands',
    'VI': u'United States Virgin Islands',
    'VN': u'Vietnam',
    'VU': u'Vanuatu',
    'WF': u'Wallis and Futuna',
    'WS': u'Samoa',
    'YE': u'Yemen',
    'YT': u'Mayotte',
    'ZA': u'South Africa',
    'ZM': u'Zambia',
    'ZW': u'Zimbabwe'
}


class Command(BaseCommand):
    help = 'Generate flags'

    # def add_arguments(self, parser):
    #     parser.add_argument('poll_id', nargs='+', type=int)

    def handle(self, *args, **options):
        _gen_flags()
        self.stdout.write(self.style.SUCCESS('Successfully created flags'))


def _gen_flags():
    for f in Flag.objects.all():
        f.delete()

    for _code, name in _COUNTRIES.items():
        code = _code.lower()
        try:
            _fn = "%s/%s.png" % (_dir, code)
            print _fn
            f = open(_fn, 'r')
            fo = Flag(name=name, code=code)
            fo.save()
            print fo.name
        except:
            print code
